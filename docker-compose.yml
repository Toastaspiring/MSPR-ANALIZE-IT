services:
  db:
    container_name: db_mspr
    image: mariadb:11.7-ubi9
    ports:
      - 3306:3306
    environment:
      MARIADB_ROOT_PASSWORD: P@ssw3rdR00t
    volumes:
      - ./init_db_script:/docker-entrypoint-initdb.d/

  phpmyadmin:
    container_name: phpmyadmin_mspr
    image: phpmyadmin:5.2.1-apache
    ports:
      - 8095:80
    environment:
      - PMA_HOST:db
      - PMA_PORT:3306 
      - PMA_ARBITRARY:1
      - UPLOAD_LIMIT:512M
    depends_on:
      - db

  etl:
    container_name: etl_mspr
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile-etl
    command: >
      /bin/sh -c "
      git pull;
      sleep 30;
      if [ -f /my_file.txt ]; then
        echo 'Le fichier existe déjà, aucune commande exécutée.';
        sleep infinity;
      else
        echo 'Création du fichier et exécution de la commande...';
        python /MSPR-ANALIZE-IT/ETL.py;
        touch /my_file.txt;
        sleep infinity;
      fi"
    

    

  api:
    container_name: api_mspr
    build:
      context: .
      dockerfile: Dockerfile-api
    command: >
      /bin/sh -c " sleep 30; npm run start"
    ports:
      - 3000:3000
    
    
  # front:
  #   container_name: front_mspr
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-front
  #   command: >
  #     /bin/sh -c "git pull;npm i; npm run dev"
  #   ports:
  #     - 5173:5173
    
  front:
    container_name: front_mspr
    build:
      context: .
      dockerfile: Dockerfile-front
    command: >
      /bin/sh -c "cd ../frontend;npm run dev"
    ports:
    - 3010:3000
  front_back:
    container_name: front_back_mspr
    build:
      context: .
      dockerfile: Dockerfile-front
    command: >
      /bin/sh -c "npm run dev"
    ports:
      - 3001:3001
  

  ia:
    container_name: ia_mspr
    build:
      context: .
      dockerfile: Dockerfile-IA
    command: >
      /bin/sh -c "python app.py"
    ports:
      - 5000:5000
  

  sonarqube:
    build:
      context: .
      dockerfile: Dockerfile-sonar
    container_name: sonarqube_mspr
    depends_on:
      - db_sonar
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db_sonar:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar    
    

  db_sonar:
    image: postgres:13
    container_name: sonarqube_db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    ports:
      - "5432:5432"
    
